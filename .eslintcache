[{"/home/shuvam/Desktop/leagueteams/src/index.js":"1","/home/shuvam/Desktop/leagueteams/src/Teams.js":"2"},{"size":5708,"mtime":1606547883406,"results":"3","hashOfConfig":"4"},{"size":2873,"mtime":1606546671019,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"19hybap",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shuvam/Desktop/leagueteams/src/index.js",["11"],"import * as d3 from 'd3';\nimport * as topojson from 'topojson-client';\nimport tip from 'd3-tip';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport Teams from './Teams';\nimport React from 'react';\n// import ReactTooltip from 'react-tooltip';\nstate = { teams: [] }\nvar width = 900;\nvar height = 700;\n\n// const tipReact = (effect) => {\n//     return (\n//         <ReactTooltip />\n//     );\n// }\n\nvar tipShow = tip()\n  .attr('class', 'd3-tip')\n  .offset([-5, 0])\n  .html(function(d) {\n    console.log(d);\n    var textToDisplay = '';\n    const teams = d.srcElement.__data__.teams; \n    if (teams) {\n        for (var i=0; i < teams.length; i++) {\n            textToDisplay += teams[i].displayName + \"\\n\";\n        }\n    }\n    // console.log(textToDisplay);\n    return textToDisplay;// var dataRow = d3.map.get(d.properties.name);\n    //    if (dataRow) {\n    //        console.log(dataRow);\n    //        return dataRow.states + \": \" + dataRow.mortality;\n    //    } else {\n    //        console.log(\"no dataRow\", d);\n    //        return d.properties.name + \": No data.\";\n    //    }\n  })\n\n\nvar svg = d3.select('#vis').append('svg')\n    .attr('width', width)\n \t   .attr('height', height);\n\nsvg.call(tipShow);\n\nvar projection = d3.geoAlbersUsa()\n    .scale(900) // mess with this if you want\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nvar colorScale = d3.scaleLinear().range([\"#D4EEFF\", \"#0099FF\"]).interpolate(d3.interpolateLab);\n\n// var countryById = d3.map();\nvar withStateTeam = [];\n\nasync function dataStates() {\n  var teamsStates = ['Arizona', 'Arizona', 'Arkansas', 'Alabama', 'California', 'California', 'Colorado', 'California', 'California', 'California', 'Alabama', 'California', 'Alabama', 'California', 'California', 'California', 'California']  \n  const response = await axios.get('http://site.api.espn.com/apis/site/v2/sports/basketball/mens-college-basketball/teams');\n  const teams = response.data.sports[0].leagues[0].teams; \n  for (var i=0; i < teams.length; i++) {\n    withStateTeam[i] = { ...teams[i], state : teamsStates[i]}\n  }\n  return withStateTeam;\n} \n// Promise.all([\n//     d3.json(\"USA.json\"),\n//     d3.csv(\"mortality.csv\")\n//     .then(typeAndSet)\n//     .then(loaded)\n// ])\n// we use queue because we have 2 data files to load.\n\n// d3.json(\"USA.json\")\n// d3.csv(\"mortality.csv\")\n// typeAndSet()\n\n// d3.queue()\n//     .defer(d3.json, \"USA.json\")\n//     .defer(d3.csv, \"mortality.csv\", typeAndSet) // process\n//     .await(loaded);\nasync function draw() {\n    var usa = await d3.json(\"USA.json\");\n    var statesTeam = await dataStates();\n    // var mortality = await d3.csv(\"mortality.csv\");\n    // var mord = typeAndSet(mortality);\n    // console.log(statesTeam);\n    loaded(usa, statesTeam);\n}\n// var mord = typeAndSet(mortality);\n// loaded(usa, mortality);\n\nfunction mapTeamState(states, statesTeam) {\n\n    // for(var i = 0; i < statesTeam.length; i++) {\n    //     if (statesTeam[i] === states.properties.name)\n    // }\n    for(var i=0; i < statesTeam.length; i++){\n        for(var j=0; j <  states.length; j++) {\n            if (!states[j].teams) {\n                states[j].teams = [];\n            }\n            if (statesTeam[i].state === states[j].properties.name) {\n                states[j].teams.push(statesTeam[i].team)\n            }\n        }\n    }\n    return states;\n}\n\n// function typeAndSet(d) {\n//     d.mortality = +d.mortality;\n//     console.log(d);\n//     d3.map.set(d.states, d);\n//     return d;\n// }\n\nfunction getColor(d) {\n    console.log(d);\n    return colorScale(1);\n    // var dataRow = d3.map.get(d.properties.name);\n    // if (dataRow) {\n    //     console.log(dataRow);\n    //     return colorScale(dataRow.mortality);\n    // } else {\n    //     console.log(\"no dataRow\", d);\n    //     return \"#ccc\";\n    // }\n}\n\nfunction clickedState(teams) {\n    console.log('clicky');\n    this.setState( { teams: teams } )\n    // const renderTeams = teams => {\n    //     teams.map(async team => {\n    //         const teamData = await axios.get(`http://site.api.espn.com/apis/site/v2/sports/basketball/mens-college-basketball/teams/${team.id}`)\n    //         console.log(teamData)\n    //         return (\n    //             <div>{teamData.rank}</div>\n    //         )\n    //     })\n    // }\n    // const NewTeams = <Teams teams={teams}/>\n    // const Teams = () => {\n    //     return (\n    //         <div>{renderTeams}</div>\n    //     )\n    // }\n    // const teamsIds = []\n    // for(var i=0; i <  teams.length; i++){\n    //     teamsIds.push({ id: teams[i].id })\n    // }\n    // console.log(teamsIds);\n    ReactDOM.render(<Teams teams={this.state.teams} />, document.querySelector('#root'));\n}\n\n\nfunction loaded(usa, statesTeam) {\n\n    // console.log(usa);\n    // console.log(statesTeam);\n\n    // var extent = d3.extent(mortality, function(d) {return d.mortality;});\n\n    // var extent = d3.extent(mortality, function(d) {return d.mortality;});\n    // colorScale.domain(d3.extent(mortality, function(d) {return d.mortality}));\n\n    var states = topojson.feature(usa, usa.objects.units).features;\n\n    states = mapTeamState(states, statesTeam);\n\n    svg.selectAll('path.states')\n        .data(states)\n        .enter()\n        .append('path')\n        .attr('class', 'states')\n        .attr('d', path)\n        .on('mouseover', tipShow.show)\n        .on('mouseout', tipShow.hide)\n        .attr('fill', function(d,i) {\n            // console.log(d.properties.name);\n            return getColor(d);\n        })\n        .on('click', function(d) {\n            console.log('clicked')\n            clickedState(d.srcElement.__data__.teams);\n            \n        })\n        .append(\"title\");\n}\n\ndraw();\n","/home/shuvam/Desktop/leagueteams/src/Teams.js",[],{"ruleId":"12","severity":2,"message":"13","line":9,"column":1,"nodeType":"14","messageId":"15","endLine":9,"endColumn":6},"no-undef","'state' is not defined.","Identifier","undef"]